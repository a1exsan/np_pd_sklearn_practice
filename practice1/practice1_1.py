#Тема “Вычисления с помощью Numpy”

"""
Задание 1
Импортируйте библиотеку Numpy и дайте ей псевдоним np.
Создайте массив Numpy под названием a размером 5x2, то есть состоящий из 5 строк и 2 столбцов.
Первый столбец должен содержать числа 1, 2, 3, 3, 1, а второй - числа 6, 8, 11, 10, 7.
Будем считать, что каждый столбец - это признак, а строка - наблюдение.
Затем найдите среднее значение по каждому признаку, используя метод mean массива Numpy.
Результат запишите в массив mean_a, в нем должно быть 2 элемента.

"""

import numpy as np

a = np.array([[1, 2, 3, 3, 1], [6, 8, 11, 10, 7]], dtype=int)

print(a)

mean_a = a.mean(axis=1)

print(mean_a)

"""
Задание 2
Вычислите массив a_centered, отняв от значений массива “а” средние значения 
соответствующих признаков, содержащиеся в массиве mean_a.
Вычисление должно производиться в одно действие. Получившийся массив должен иметь размер 5x2.

"""

a_centered = a.T - mean_a

print(a_centered, '\n')

"""
Задание 3
Найдите скалярное произведение столбцов массива a_centered. 
В результате должна получиться величина a_centered_sp. 
Затем поделите a_centered_sp на N-1, где N - число наблюдений.

"""

a_centered_sp = a_centered[:, 0].T @ a_centered[:, 1]

print(a_centered[:, 0].T, a_centered[:, 1])
print(a_centered_sp)

a_centered_sp = a_centered_sp / (a.shape[1] - 1)

print(a_centered_sp, '\n')


"""
Задание 4**
В этом задании проверьте получившееся число, вычислив ковариацию еще одним способом - с помощью функции np.cov. 
В качестве аргумента m функция np.cov должна принимать транспонированный массив “a”. 
В получившейся ковариационной матрице (массив Numpy размером 2x2) искомое значение ковариации будет 
равно элементу в строке с индексом 0 и столбце с индексом 1.
"""

cov = np.cov(a_centered.T)

print(cov)